x-service: &common-dev-test
  build:
    context: .
    target: build
  env_file:
    - .env
  volumes:
    - .:/src
  working_dir: /src

services:
  prod:
    image: dhis2/im-inspector:${IMAGE_TAG:-latest}
    build: .
    env_file:
      - .env
    volumes:
      - kubernetes-config:/kubernetes:z
    depends_on:
      rabbitmq:
        condition: service_healthy
      kubernetes:
        condition: service_healthy
      init-kubernetes-config:
        condition: service_completed_successfully

  test:
    command: /bin/sh -c 'go test -v ./...'
    <<: *common-dev-test

  rabbitmq:
    image: bitnami/rabbitmq:3.13
    ports:
      - "127.0.0.1:5672:5672" # regular AMQP
      - "127.0.0.1:15672:15672" # management UI
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS: true
      RABBITMQ_DISK_FREE_ABSOLUTE_LIMIT: "100MB"
      RABBITMQ_PLUGINS: "rabbitmq_management,rabbitmq_management_agent,rabbitmq_stream,rabbitmq_stream_management"
    healthcheck:
      # https://www.rabbitmq.com/docs/monitoring#stage-3
      test: rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
      interval: 5s
      timeout: 3s
      retries: 5

  kubernetes:
    image: rancher/k3s:v1.29.4-k3s1
    privileged: true
    command: server
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    ports:
      - "127.0.0.1:6443:6443" # Kubernetes API Server
    volumes:
      - k3s-server:/var/lib/rancher/k3s
      - kubernetes-config:/tmp/kubernetes:z
    environment:
      K3S_KUBECONFIG_OUTPUT: /tmp/kubernetes/k3s.yaml
      K3S_KUBECONFIG_MODE: 666
    healthcheck:
      test: ["CMD-SHELL", "kubectl --kubeconfig /tmp/kubernetes/k3s.yaml version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  init-kubernetes-config:
    image: busybox
    volumes:
      - kubernetes-config:/tmp/kubernetes:z
    working_dir: /tmp/kubernetes
    command: >
      sh -c "cp k3s.yaml config.yaml && sed -i 's/127.0.0.1/kubernetes/g' config.yaml"
    depends_on:
      kubernetes:
        condition: service_healthy

volumes:
  k3s-server: {}
  kubernetes-config: { }
